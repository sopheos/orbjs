{"version":3,"sources":["../../../src/es/bool.ts"],"names":["Bool","value","add","set","key","data","type","push","bool"],"mappings":";;;AAAA,WAAaA,IAAb;AAAA;AAAA;;AAAA,kCAEwB,EAFxB;AAAA;;AAAA;AAAA;AAAA,WAQI,cAAYC,KAAZ,EAA8B;AAC1B,aAAO,KAAKC,GAAL,CAAS,MAAT,EAAiBD,KAAjB,CAAP;AACH;AAVL;AAAA;AAAA,WAYI,gBAAcA,KAAd,EAAgC;AAC5B,aAAO,KAAKC,GAAL,CAAS,QAAT,EAAmBD,KAAnB,CAAP;AACH;AAdL;AAAA;AAAA,WAgBI,gBAAcA,KAAd,EAAgC;AAC5B,aAAO,KAAKC,GAAL,CAAS,QAAT,EAAmBD,KAAnB,CAAP;AACH;AAlBL;AAAA;AAAA,WAoBI,iBAAeA,KAAf,EAAiC;AAC7B,aAAO,KAAKC,GAAL,CAAS,UAAT,EAAqBD,KAArB,CAAP;AACH;AAtBL;AAAA;AAAA,WAwBI,4BAA0BA,KAA1B,EAA+C;AAC3C,aAAO,KAAKE,GAAL,CAAS,sBAAT,EAAiCF,KAAjC,CAAP;AACH;AA1BL;AAAA;AAAA,WA4BI,iBAAsC;AAAA,UAAzBA,KAAyB,uEAAT,CAAS;AAClC,aAAO,KAAKE,GAAL,CAAS,OAAT,EAAkBF,KAAlB,CAAP;AACH;AA9BL;AAAA;AAAA,WAgCI,aAAYG,GAAZ,EAAyBH,KAAzB,EAA2C;AACvC,WAAKI,IAAL,CAAUD,GAAV,IAAiBH,KAAjB;AACA,aAAO,IAAP;AACH;AAnCL;AAAA;AAAA,WAqCI,aAAYK,IAAZ,EAA0BL,KAA1B,EAA4C;AACxC,UAAI,CAAC,KAAKI,IAAL,CAAUC,IAAV,CAAL,EAAsB,KAAKD,IAAL,CAAUC,IAAV,IAAkB,EAAlB;AACtB,WAAKD,IAAL,CAAUC,IAAV,EAAgBC,IAAhB,CAAqBN,KAArB;AACA,aAAO,IAAP;AACH;AAzCL;AAAA;AAAA,WA2CI,kBAAgB;AACZ,aAAO;AAAEO,QAAAA,IAAI,EAAE,KAAKH;AAAb,OAAP;AACH;AA7CL;AAAA;AAAA,WAII,gBAA2B;AACvB,aAAO,IAAIL,IAAJ,EAAP;AACH;AANL;;AAAA;AAAA","sourcesContent":["export class Bool {\n\n    private data: any = {}\n\n    public static make(): Bool {\n        return new Bool();\n    }\n\n    public must(value: any): this {\n        return this.add('must', value);\n    }\n\n    public filter(value: any): this {\n        return this.add('filter', value);\n    }\n\n    public should(value: any): this {\n        return this.add('should', value);\n    }\n\n    public mustNot(value: any): this {\n        return this.add('must_not', value);\n    }\n\n    public minimumShouldMatch(value: number): this {\n        return this.set('minimum_should_match', value);\n    }\n\n    public boost(value: number = 1): this {\n        return this.set('boost', value);\n    }\n\n    private set(key: string, value: any): this {\n        this.data[key] = value;\n        return this;\n    }\n\n    private add(type: string, value: any): this {\n        if (!this.data[type]) this.data[type] = [];\n        this.data[type].push(value);\n        return this;\n    }\n\n    public toJSON() {\n        return { bool: this.data };\n    }\n}"],"file":"bool.js"}
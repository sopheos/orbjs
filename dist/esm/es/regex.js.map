{"version":3,"sources":["../../../src/es/regex.ts"],"names":["Term","Regex","field","value","name","set"],"mappings":";;;;;;;;;;AAAA,SAASA,IAAT,QAAqB,QAArB;AAEA,WAAaC,KAAb;AAAA;;AAAA;;AAEI,iBAAYC,KAAZ,EAA2BC,KAA3B,EAAuC;AAAA;;AAAA;;AACnC,8BAAMD,KAAN,EAAaC,KAAb;AACA,UAAKC,IAAL,GAAY,QAAZ;AAFmC;AAGtC;;AALL;AAAA;AAAA,WAWI,eAAaD,KAAb,EAAkC;AAC9B,aAAO,KAAKE,GAAL,CAAS,OAAT,EAAkBF,KAAlB,CAAP;AACH;AAbL;AAAA;AAAA,WAOI,cAAmBD,KAAnB,EAAkCC,KAAlC,EAAqD;AACjD,aAAO,IAAIF,KAAJ,CAAUC,KAAV,EAAiBC,KAAjB,CAAP;AACH;AATL;;AAAA;AAAA,EAA2BH,IAA3B","sourcesContent":["import { Term } from './term'\n\nexport class Regex extends Term {\n\n    constructor(field: string, value: any) {\n        super(field, value);\n        this.name = 'regexp';\n    }\n\n    public static make(field: string, value: any): Regex {\n        return new Regex(field, value);\n    }\n\n    public flags(value: string): this {\n        return this.set('flags', value);\n    }\n}"],"file":"regex.js"}
{"version":3,"sources":["../../../src/es/terms.ts"],"names":["AbstractFilter","Terms","field","values","data","obj","terms"],"mappings":";;;;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,mBAA/B;AAEA,WAAaC,KAAb;AAAA;;AAAA;;AAKI,iBAAYC,KAAZ,EAA2BC,MAA3B,EAA0C;AAAA;;AAAA;;AACtC;;AADsC;;AAAA;;AAEtC,UAAKD,KAAL,GAAaA,KAAb;AACA,UAAKE,IAAL,GAAYD,MAAZ;AAHsC;AAIzC;;AATL;AAAA;AAAA,WAeI,kBAAgB;AAEZ,UAAIE,GAAQ,GAAG;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AACAD,MAAAA,GAAG,CAACC,KAAJ,CAAU,KAAKJ,KAAf,IAAwB,KAAKE,IAA7B;AAEA,aAAOC,GAAP;AACH;AArBL;AAAA;AAAA,WAWI,cAAmBH,KAAnB,EAA2D;AAAA,wCAAtBC,MAAsB;AAAtBA,QAAAA,MAAsB;AAAA;;AACvD,aAAO,IAAIF,KAAJ,CAAUC,KAAV,EAAiBC,MAAjB,CAAP;AACH;AAbL;;AAAA;AAAA,EAA2BH,cAA3B","sourcesContent":["import { AbstractFilter } from './abstract_filter'\n\nexport class Terms extends AbstractFilter {\n\n    private field: string;\n    private data: any[];\n\n    constructor(field: string, values: any[]) {\n        super();\n        this.field = field;\n        this.data = values;\n    }\n\n    public static make(field: string, ...values: any[]): Terms {\n        return new Terms(field, values);\n    }\n\n    public toJSON() {\n\n        let obj: any = { terms: {} };\n        obj.terms[this.field] = this.data;\n\n        return obj;\n    }\n\n\n}"],"file":"terms.js"}